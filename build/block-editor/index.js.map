{"version":3,"file":"block-editor/index.js","mappings":"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","sources":["webpack://clear-blocks-plugin/./node_modules/bootstrap-icons/font/bootstrap-icons.css?f498","webpack://clear-blocks-plugin/./src/block-editor/neon.css?078d","webpack://clear-blocks-plugin/external window [\"wp\",\"blockEditor\"]","webpack://clear-blocks-plugin/external window [\"wp\",\"components\"]","webpack://clear-blocks-plugin/external window [\"wp\",\"data\"]","webpack://clear-blocks-plugin/external window [\"wp\",\"editPost\"]","webpack://clear-blocks-plugin/external window [\"wp\",\"element\"]","webpack://clear-blocks-plugin/external window [\"wp\",\"i18n\"]","webpack://clear-blocks-plugin/external window [\"wp\",\"plugins\"]","webpack://clear-blocks-plugin/external window [\"wp\",\"richText\"]","webpack://clear-blocks-plugin/./src/block-editor/fonts.js","webpack://clear-blocks-plugin/./src/block-editor/neon-format.js","webpack://clear-blocks-plugin/./src/block-editor/sidebar.js","webpack://clear-blocks-plugin/webpack/bootstrap","webpack://clear-blocks-plugin/webpack/runtime/make namespace object","webpack://clear-blocks-plugin/./src/block-editor/index.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport {};","// extracted by mini-css-extract-plugin\nexport {};","module.exports = window[\"wp\"][\"blockEditor\"];","module.exports = window[\"wp\"][\"components\"];","module.exports = window[\"wp\"][\"data\"];","module.exports = window[\"wp\"][\"editPost\"];","module.exports = window[\"wp\"][\"element\"];","module.exports = window[\"wp\"][\"i18n\"];","module.exports = window[\"wp\"][\"plugins\"];","module.exports = window[\"wp\"][\"richText\"];","// import 'bootstrap-icons/bootstrap-icons.svg';","import './neon.css';\r\nimport { registerFormatType, toggleFormat } from \"@wordpress/rich-text\";\r\nimport { RichTextToolbarButton } from \"@wordpress/block-editor\"\r\nimport { __ } from \"@wordpress/i18n\";\r\nimport { useSelect } from \"@wordpress/data\";\r\n\r\nregisterFormatType(\"clearblocks/neon\", {\r\n  title: __(\"Neon\", \"cc-clearblocks\"),\r\n  tagName: \"span\",\r\n  className: 'neon',\r\n  edit({ isActive, onChange, value }) {\r\n    const selectedBlock = useSelect(select => select('core/block-editor').getSelectedBlock());\r\n    return (\r\n      <>\r\n        {console.log(selectedBlock)}\r\n        {selectedBlock?.name === \"core/paragraph\" &&\r\n          <RichTextToolbarButton\r\n            title={__(\"Neon\", \"cc-clearblocks\")}\r\n            icon=\"superhero\"\r\n            isActive={isActive}\r\n            onClick={() => {\r\n              onChange(toggleFormat(value, {\r\n                type: \"clearblocks/neon\",\r\n              })\r\n              );\r\n            }}\r\n          />\r\n        }\r\n      </>\r\n    );\r\n  },\r\n\r\n});","import { registerPlugin } from \"@wordpress/plugins\";\r\nimport { PluginSidebar } from \"@wordpress/edit-post\";\r\nimport { __ } from \"@wordpress/i18n\";\r\nimport { useSelect, useDispatch } from \"@wordpress/data\";\r\nimport { PanelBody, TextControl, TextareaControl, ToggleControl, Button } from \"@wordpress/components\";\r\nimport { MediaUpload, MediaUploadCheck } from \"@wordpress/block-editor\";\r\n\r\n\r\nregisterPlugin(\"ccb-sidebar\", {\r\n  render(){\r\n    const { og_title, og_image, og_description, og_override_image } = useSelect((select)=> {\r\n      return select('core/editor').getEditedPostAttribute('meta');\r\n    });\r\n\r\n    const { editPost } = useDispatch(\"core/editor\");\r\n\r\n    return (\r\n      <PluginSidebar\r\n        name=\"ccb_sidebar\"\r\n        icon=\"share\"\r\n        title={__(\"Clearblocks Sidebar\", \"cc-clearblocks\")}\r\n      >\r\n        <PanelBody title={__(\"Opengraph Options\", \"udemy-plus\")}>\r\n          <TextControl \r\n            label={__(\"Title\", \"udemy-plus\")}\r\n            value={og_title}\r\n            onChange={og_title => \r\n              editPost({\r\n                meta: {\r\n                  og_title,\r\n                },\r\n              })\r\n            }\r\n          />\r\n          <TextareaControl \r\n            label={__(\"Description\", \"udemy-plus\")}\r\n            value={og_description}\r\n            onChange={og_description => \r\n              editPost({\r\n                meta: {\r\n                  og_description,\r\n                },\r\n              })\r\n            }\r\n          />\r\n          <ToggleControl \r\n            label={__(\"Override Featured Image\", \"udemy-plus\")}\r\n            checked={og_override_image}\r\n            help={__(\r\n            \"By default, the featured image will be used as the image. Check this option to use a different image.\",\r\n            \"udemy-plus\"\r\n            )}\r\n            onChange={og_override_image => \r\n              editPost({\r\n                meta: {\r\n                  og_override_image,\r\n                },\r\n              })\r\n            }\r\n          />\r\n          { og_override_image && \r\n            <>\r\n              <img src={og_image} />\r\n              <MediaUploadCheck>\r\n                <MediaUpload\r\n                  accept={[\"image\"]}\r\n                  render={({ open })=> {\r\n                    return (\r\n                      <Button variant=\"primary\" onClick={open}>\r\n                        {__(\"Change Image\", \"cc-clearblocks\")}\r\n                      </Button>\r\n                    )\r\n                  }}\r\n                  onSelect={(image)=> {\r\n                    editPost({\r\n                      meta: {\r\n                        og_image: image.sizes.openGraph.url,\r\n                      },\r\n                    });\r\n                  }}\r\n                />\r\n              </MediaUploadCheck>\r\n            </>\r\n          }\r\n        </PanelBody>\r\n      </PluginSidebar>\r\n    );\r\n  },\r\n});\r\n\r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import './fonts.js';\r\nimport 'bootstrap-icons/font/bootstrap-icons.css';\r\nimport \"./sidebar.js\";\r\nimport \"./neon-format.js\";"],"names":["registerFormatType","toggleFormat","RichTextToolbarButton","__","useSelect","title","tagName","className","edit","isActive","onChange","value","selectedBlock","select","getSelectedBlock","createElement","Fragment","console","log","name","icon","onClick","type","registerPlugin","PluginSidebar","useDispatch","PanelBody","TextControl","TextareaControl","ToggleControl","Button","MediaUpload","MediaUploadCheck","render","og_title","og_image","og_description","og_override_image","getEditedPostAttribute","editPost","label","meta","checked","help","src","accept","open","variant","onSelect","image","sizes","openGraph","url"],"sourceRoot":""}